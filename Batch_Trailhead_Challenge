// https://trailhead.salesforce.com/content/learn/modules/asynchronous_apex/async_apex_batch?trailmix_creator_id=rsacristan&trailmix_slug=batch-schedule

Apex Batch Class:
public without sharing class LeadProcessor implements Database.Batchable<sObjects> {
    
    //start method
    public Database.QueryLocator start(Database.Batchable Context dbc){
        return Database.getQueryLocator([SELECT Id, Name FROM Lead]);
    }
    
    //execute method
    public void execute(Database.BatchableContext dbc, List<Lead> leads){
        for(Lead l : leads){
            l.LeadSource = 'Dreamforce';
        }
        update leads;
    }
    
    //finish method
    public void finish(Database.BatchableContext dbc){
      System.debug('Done');
    }
}

Apex Test Class:

@isTest
private class LeadProcessorTest{
    @isTest
    private static void test BatchClass(){
        //Load test data
        List<Lead> leads = new List<Lead>();
        for(Integer i=0; i<200; i++){
            leads.add(new Lead(LastName='TestLastName', Company='TestCompany'));
        }
        insert leads;
        
        //Perform the test
        Test.startTest();
        LeadProcessor lp=new LeadProcessor();
        Id batchId = Database.executeBatch(lp,200);
        Test.stopTest();
        
        //Check the result
        List<Lead> updatedLeads = [SELECT Id FROM Lead WHERE LeadSource = 'Dreamforce'];
        System.assertEquals(200, updatedLeads.size(), 'ERROR: At least 1 Lead record not updated correctly';
    }
    
}



